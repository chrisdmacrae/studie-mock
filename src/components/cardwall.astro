---
const { title, count } = Astro.props;
import { slide } from "astro:transitions";
import Card from "../components/card.astro";
---

<div class="relative flex flex-row justify-between items-center pt-24 md:pt-8">
  <div class="flex flex-col max-w-7xl mx-auto w-full">
    <h2
      class="flex flex-row items-center gap-2 text-2xl font-bold text-white/90 pb-4"
    >
      {title}{" "}
      <span class="bg-white/20 p-1 rounded-full text-xs">
        {count}
      </span>
    </h2>
    <button
      class="previous hidden md:flex absolute z-40 top-1/2 -translate-y-1/2 left-5 z-40 w-10 h-10 justify-center items-center bg-white/50 backdrop-blur-sm rounded-full text-black transition-all duration-300 opacity-0"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M15.75 19.5 8.25 12l7.5-7.5"></path>
      </svg>

      <span class="sr-only">Next</span>
    </button>
    <div
      data-cards
      class="relative flex flex-col md:flex-row md:flex-nowrap gap-4 md:h-56 overflow-hidden w-screen left-1/2 right-1/2 ml-[-50vw] mr-[-50vw] px-8"
      transition:animate={slide({ duration: "1s" })}
    >
      <a href="/lesson" class="block md:ml-56">
        <Card src="/jp-cormier-fiddle-mandolin.jpg" />
      </a>
      <a href="/lesson">
        <Card src="https://source.unsplash.com/random/900×700/?music" />
      </a>

      <a href="/lesson">
        <Card src="https://source.unsplash.com/random/900×700/?guitar" />
      </a>

      <a href="/lesson">
        <Card src="https://source.unsplash.com/random/900×700/?band" />
      </a>

      <a href="/lesson">
        <Card src="https://source.unsplash.com/random/900×700/?musician" />
      </a>

      <a href="/lesson">
        <Card src="https://source.unsplash.com/random/900×700/?musical" />
      </a>
    </div>
    <button
      class="next hidden md:flex absolute z-40 top-1/2 -translate-y-1/2 right-5 z-40 w-10 h-10 justify-center items-center bg-white/50 backdrop-blur-sm rounded-full text-black transition-all duration-300"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="m8.25 4.5 7.5 7.5-7.5 7.5"></path>
      </svg>

      <span class="sr-only">Next</span>
    </button>
  </div>
</div>

<script>
  document.querySelectorAll("[data-cards]").forEach((el: HTMLElement) => {
    const next = document.querySelector(".next");
    const previous = document.querySelector(".previous");
    const updateButtons = () => {
      if (el.scrollLeft > 0) {
        previous.classList.remove("opacity-0");
      } else {
        previous.classList.add("opacity-0");
      }

      if (el.scrollLeft + el.clientWidth === el.scrollWidth) {
        next.classList.add("opacity-0");
      } else {
        next.classList.remove("opacity-0");
      }
    };

    next.addEventListener("click", () => {
      el.scrollBy({
        left: window.innerWidth,
        behavior: "smooth",
      });

      setTimeout(() => {
        updateButtons();
      }, 500);
    });

    previous.addEventListener("click", () => {
      el.scrollBy({
        left: window.innerWidth * -1,
        behavior: "smooth",
      });

      setTimeout(() => {
        updateButtons();
      }, 500);
    });
  });
</script>
